#!/bin/bash
# Proxmox Automated Snapshot Lifecycle Management
# Generated by Proxmox Agent - High Priority Optimization

echo "ðŸ“¸ Automated Snapshot Lifecycle Management"
echo "=========================================="

# Configuration
KEEP_DAILY=7      # Keep 7 daily snapshots
KEEP_WEEKLY=4     # Keep 4 weekly snapshots  
KEEP_MONTHLY=12   # Keep 12 monthly snapshots

LOG_FILE="/var/log/snapshot-cleanup.log"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

log_message() {
    echo "[$DATE] $1" | tee -a "$LOG_FILE"
}

log_message "Starting automated snapshot cleanup"

# Function to get snapshot age in days
get_snapshot_age_days() {
    local snapshot_time="$1"
    local current_time=$(date +%s)
    local age_seconds=$((current_time - snapshot_time))
    local age_days=$((age_seconds / 86400))
    echo $age_days
}

# Clean old VM snapshots
log_message "Processing VM snapshots..."
for vmid in $(qm list | awk 'NR>1 {print $1}'); do
    if qm config $vmid >/dev/null 2>&1; then
        log_message "Checking VM $vmid snapshots"
        
        # Get snapshots (excluding current)
        qm listsnapshot $vmid 2>/dev/null | grep -v current | grep -v NAME | while read snapshot_line; do
            snapshot_name=$(echo "$snapshot_line" | awk '{print $1}')
            snapshot_time=$(echo "$snapshot_line" | awk '{print $3}')
            
            if [ -n "$snapshot_time" ] && [ "$snapshot_time" != "0" ]; then
                age_days=$(get_snapshot_age_days "$snapshot_time")
                
                # Delete snapshots older than retention policy
                if [ $age_days -gt 90 ]; then
                    log_message "Deleting old VM $vmid snapshot '$snapshot_name' (${age_days} days old)"
                    qm delsnapshot $vmid "$snapshot_name" --force 2>/dev/null
                elif [ $age_days -gt 30 ]; then
                    log_message "VM $vmid snapshot '$snapshot_name' is ${age_days} days old (review recommended)"
                fi
            fi
        done
    fi
done

# Clean old container snapshots
log_message "Processing container snapshots..."
for ctid in $(pct list | awk 'NR>1 {print $1}'); do
    if pct config $ctid >/dev/null 2>&1; then
        log_message "Checking container $ctid snapshots"
        
        # Get snapshots (excluding current)
        pct listsnapshot $ctid 2>/dev/null | grep -v current | grep -v NAME | while read snapshot_line; do
            snapshot_name=$(echo "$snapshot_line" | awk '{print $1}')
            snapshot_time=$(echo "$snapshot_line" | awk '{print $3}')
            
            if [ -n "$snapshot_time" ] && [ "$snapshot_time" != "0" ]; then
                age_days=$(get_snapshot_age_days "$snapshot_time")
                
                # Delete snapshots older than retention policy
                if [ $age_days -gt 90 ]; then
                    log_message "Deleting old container $ctid snapshot '$snapshot_name' (${age_days} days old)"
                    pct delsnapshot $ctid "$snapshot_name" --force 2>/dev/null
                elif [ $age_days -gt 30 ]; then
                    log_message "Container $ctid snapshot '$snapshot_name' is ${age_days} days old (review recommended)"
                fi
            fi
        done
    fi
done

# Clean orphaned snapshot files
log_message "Cleaning orphaned snapshot files..."
find /var/lib/vz -name "*snapshot*" -mtime +90 -type f -delete 2>/dev/null

log_message "Snapshot cleanup completed"

# Report current snapshot count
TOTAL_SNAPSHOTS=0
for vmid in $(qm list | awk 'NR>1 {print $1}'); do
    VM_SNAPSHOTS=$(qm listsnapshot $vmid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    TOTAL_SNAPSHOTS=$((TOTAL_SNAPSHOTS + VM_SNAPSHOTS))
done

for ctid in $(pct list | awk 'NR>1 {print $1}'); do
    CT_SNAPSHOTS=$(pct listsnapshot $ctid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    TOTAL_SNAPSHOTS=$((TOTAL_SNAPSHOTS + CT_SNAPSHOTS))
done

log_message "Total remaining snapshots: $TOTAL_SNAPSHOTS"

echo "ðŸ“Š Snapshot cleanup summary logged to: $LOG_FILE"
echo "ðŸ“¸ Current total snapshots: $TOTAL_SNAPSHOTS"
