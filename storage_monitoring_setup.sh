#!/bin/bash
# Proxmox Storage Monitoring and Alerting
# Generated by Proxmox Agent - High Priority Optimization

echo "📊 Setting up Storage Monitoring and Alerting"
echo "============================================="

# Create storage monitoring script
cat > /usr/local/bin/storage-monitor.sh << 'EOF'
#!/bin/bash
# Storage Monitoring Script

LOG_FILE="/var/log/storage-monitor.log"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

log_message() {
    echo "[$DATE] $1" | tee -a "$LOG_FILE"
}

send_alert() {
    local message="$1"
    local severity="$2"
    
    # Log the alert
    log_message "ALERT [$severity]: $message"
    
    # Send email alert
    echo "$message" | mail -s "Proxmox Storage Alert [$severity] - $(hostname)" root
    
    # Send to gotify if available (CT 107)
    if pct status 107 | grep -q "running"; then
        # Get gotify container IP
        GOTIFY_IP=$(pct exec 107 -- hostname -I | awk '{print $1}')
        if [ -n "$GOTIFY_IP" ]; then
            curl -X POST "http://$GOTIFY_IP:80/message"                 -H "Content-Type: application/json"                 -d "{"title":"Proxmox Storage Alert","message":"$message","priority":5}"                 2>/dev/null || true
        fi
    fi
}

check_filesystem() {
    local fs="$1"
    local threshold_warning="$2"
    local threshold_critical="$3"
    
    if [ ! -d "$fs" ]; then
        return
    fi
    
    local usage=$(df "$fs" | awk 'NR==2 {print $5}' | sed 's/%//')
    local used=$(df -h "$fs" | awk 'NR==2 {print $3}')
    local total=$(df -h "$fs" | awk 'NR==2 {print $2}')
    local avail=$(df -h "$fs" | awk 'NR==2 {print $4}')
    
    if [ "$usage" -ge "$threshold_critical" ]; then
        send_alert "CRITICAL: $fs is ${usage}% full (${used}/${total}, ${avail} available)" "CRITICAL"
    elif [ "$usage" -ge "$threshold_warning" ]; then
        send_alert "WARNING: $fs is ${usage}% full (${used}/${total}, ${avail} available)" "WARNING"
    fi
}

check_lvm_storage() {
    # Check LVM thin pools
    local lvm_usage=$(lvs --noheadings -o data_percent pve/data 2>/dev/null | tr -d ' %')
    
    if [ -n "$lvm_usage" ] && [ "$lvm_usage" -ge 90 ]; then
        send_alert "CRITICAL: LVM thin pool is ${lvm_usage}% full" "CRITICAL"
    elif [ -n "$lvm_usage" ] && [ "$lvm_usage" -ge 80 ]; then
        send_alert "WARNING: LVM thin pool is ${lvm_usage}% full" "WARNING"
    fi
}

# Monitor key filesystems
log_message "Starting storage monitoring check"

# Root filesystem
check_filesystem "/" 80 90

# Local storage
check_filesystem "/var/lib/vz" 80 90

# Backup storage  
check_filesystem "/var/lib/vz/dump" 85 95
check_filesystem "/mnt/pve/Backups" 85 95

# Check LVM storage
check_lvm_storage

# Check for snapshot storage issues
SNAPSHOT_COUNT=0
for vmid in $(qm list | awk 'NR>1 {print $1}'); do
    VM_SNAPSHOTS=$(qm listsnapshot $vmid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    SNAPSHOT_COUNT=$((SNAPSHOT_COUNT + VM_SNAPSHOTS))
done

for ctid in $(pct list | awk 'NR>1 {print $1}'); do
    CT_SNAPSHOTS=$(pct listsnapshot $ctid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    SNAPSHOT_COUNT=$((SNAPSHOT_COUNT + CT_SNAPSHOTS))
done

if [ "$SNAPSHOT_COUNT" -gt 100 ]; then
    send_alert "WARNING: High snapshot count detected ($SNAPSHOT_COUNT total). Consider cleanup." "WARNING"
fi

log_message "Storage monitoring check completed"
EOF

chmod +x /usr/local/bin/storage-monitor.sh

# Create comprehensive storage status script
cat > /usr/local/bin/storage-status.sh << 'EOF'
#!/bin/bash
# Comprehensive Storage Status Report

echo "📊 PROXMOX STORAGE STATUS REPORT"
echo "================================"
echo "📅 Generated: $(date)"
echo ""

echo "💿 FILESYSTEM USAGE:"
echo "-------------------"
df -h / /var/lib/vz 2>/dev/null | grep -v tmpfs

echo ""
echo "💾 LVM STORAGE POOLS:"
echo "--------------------"
pvesm status 2>/dev/null || echo "PVE storage manager not available"

echo ""
echo "📸 SNAPSHOT SUMMARY:"
echo "-------------------"
TOTAL_SNAPSHOTS=0

for vmid in $(qm list | awk 'NR>1 {print $1}'); do
    VM_SNAPSHOTS=$(qm listsnapshot $vmid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    if [ $VM_SNAPSHOTS -gt 0 ]; then
        echo "VM $vmid: $VM_SNAPSHOTS snapshots"
    fi
    TOTAL_SNAPSHOTS=$((TOTAL_SNAPSHOTS + VM_SNAPSHOTS))
done

for ctid in $(pct list | awk 'NR>1 {print $1}'); do
    CT_SNAPSHOTS=$(pct listsnapshot $ctid 2>/dev/null | grep -v current | grep -v NAME | wc -l)
    if [ $CT_SNAPSHOTS -gt 0 ]; then
        echo "CT $ctid: $CT_SNAPSHOTS snapshots"
    fi
    TOTAL_SNAPSHOTS=$((TOTAL_SNAPSHOTS + CT_SNAPSHOTS))
done

echo "Total snapshots: $TOTAL_SNAPSHOTS"

echo ""
echo "🔍 LARGE FILES (>1GB):"
echo "---------------------"
find /var/lib/vz -size +1G -type f -exec ls -lh {} \; 2>/dev/null | head -10

echo ""
echo "✅ Storage status report completed"
EOF

chmod +x /usr/local/bin/storage-status.sh

# Set up cron jobs for monitoring
echo "⏰ Setting up monitoring schedule..."
cat > /etc/cron.d/storage-monitoring << 'EOF'
# Proxmox Storage Monitoring
# Check storage every 6 hours
0 */6 * * * root /usr/local/bin/storage-monitor.sh

# Generate daily storage report
0 8 * * * root /usr/local/bin/storage-status.sh | mail -s "Daily Storage Report - $(hostname)" root
EOF

echo ""
echo "✅ Storage monitoring configured!"
echo ""
echo "📋 Monitoring setup:"
echo "   - Storage checks: Every 6 hours"
echo "   - Daily reports: 8 AM via email"
echo "   - Gotify alerts: Enabled (if CT 107 running)"
echo "   - Log file: /var/log/storage-monitor.log"
echo ""
echo "🔍 Manual commands:"
echo "   /usr/local/bin/storage-monitor.sh    # Run check now"
echo "   /usr/local/bin/storage-status.sh     # Generate report"
echo "   tail -f /var/log/storage-monitor.log # Monitor alerts"
